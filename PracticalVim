実践Vim 学習記録
 4/28	tips3
'a+b'の+に余白を入れる作業を繰り返す場合。
a + b a + b a + b a + b a + b a + b これら全てに空白を入れる場合。
s 1文字を削除してインサートモードにする。
f文字 前方文字検索
; fコマンドで実行した検索の内容を繰り返す。
. 直前の動作を繰り返す。挿入モードに入ってから抜けるまでを記録している。
+の上でs押してから　+　として挿入モードを抜ける。その後ドットコマンドで繰り返す。この時にf+でカーソルを一気に移動させ、以降;でカーソル移動。結果として;.;.;.と繰り返すだけで完了する。	

4/29	tips49
検索コマンドを用いて1行の中で最短で移動。
f{char} 1文字を現在行内の末尾に向かって検索。(Fも;も,ももちろん使える。) 
t{char} 検索した文字の直前まで移動。(Tも)(till)
I'm so busy that I have no time to get around the city.
これをthat以降消したいがピリオドを残しておきたい時にtコマンドが便利。ftdt.で消せる。
f,Fはノーマルモードで使うことが多く、t,Tはオペレーター待機モードで使うことが多い。
検索コマンドを使うコツとして単語中で出現率の低い文字を選択すれば速い。
※ :set nospell

4/30	tips50
/word<CR> word検索。しかもどの行でもいける。n/Nで先に行ったり戻ったりもできる。コツは全部打ち込むよりちょうどいい塩梅でヒットするとこまで入力。
hlsearch 強調表示
incsearch tips81参照
This phrase takes time but eventually gets to the point.
1./tak<CR> v/ge<CR>hd ビジュアルモードで検索して1文字戻って削除。
2./tak<CR> d/ge<CR> この検索コマンドは排他的なモーション。最短。

5/1	tips4
・繰り返し操作
やりたいこと		操作		繰り返し	戻る

変更						{edit}		.				u
行内検索				f/t				;				,
検索						/(?)			n				N
置換						:s/--/--	&				u
一連の変更を実行	qx{change}q	@x		u

5/2	tips7,8	
Exコマンド	コマンドラインモードで使うコマンド。(e.g.:wq)
Vimではアンドゥコマンドの粒度を自分で制御できる。挿入モードに入ってからノーマルモードに戻るまでを単一の変更とみなすので、モードの切り替え方で単語、センテンス、パラグラフに対してアンドゥを適用可。
インサートで行末にいるとき改行は<CR>で済むが、ctrl-[oで改行してアンドゥする単位を新規に作っていくのもあり。手が止まるようであれば基本的に挿入モードからぬけるべき。

5/3	tips118
スペルチェッカを無効にしといて最後に有効科してチェック。
Yoru mum has a moustache.
:set spell スペルチェック
[s/]s 前方/後方ジャンプ
z= 修正候補リスト。最初の候補が正しいと確信できるなら1z=。
zg/zw 現在の単語をスペルファイルに追加/削除
zug 現在のコマンドに対してzg/zwコマンドをアンドゥ。

5/4	tips87
:substituteコマンドの構文。
:[range]s/{pattern}/{string}/[flags]
:[tips28]s/{12章}/
置換コマンドの動作はフラグを使ってチューンできる。
gフラグ 1行の中にあるすべてのマッチが変更される(globally)
cフラグ ここの変更について実行するか確認する(confirm)
nフラグ 置換動作を行わずマッチの数を報告する(number)tips82
eフラグ エラーを非表示
&フラグ 直前の置換コマンドを実行
・置換文字列で使用する特殊文字
:s/new/new/g
It looks new bag.I want new one.New,new new,new.

5/5	tips5
vimで一番重要なのはドットコマンドで、次に重要なのが*コマンド。
* その時点でカーソル位置にある単語を検索する。
We're waiting for content before the site can go live.
If you are content with this, let's go ahead with it.
We'll launch as soon as we have the content.
:%s/old/new/g	%入れておくと1行内でなくページ内でやってくれる。
/cont * cwcopy n .

5/6	tips1,2,6
>G/<G	インデントを深く/浅く
カーソル移動用のキー入力１つと実行するキー入力が１つが理想形。
この方法をドットの公式と呼ぶ。

5/7	tips9 vimゴルフ
The end is night
書いている途中でnightを消したい時
1.dbx
2.bdw
3.daw (delete a word)
キーストロークの数は同じだが繰り返し性が高い(ドットコマンドの有用性)のは3の時。できる限り変更は繰り返し可能なものとする習慣をつける。

5/8	tips10 加算減算
<C-a> 加算 カーソル以降にある数字に適用。
<C-x> 減算
.blog, .news { background-image: url(/sprite.png); }
.blog { background-position: 3px 3px }
.news { background-position: 178px -540px }
yyp cW.news<ESC> 180<C-x>
※ 007など0が頭につくものは８進数表記になることがある。(set nrformats= などを.vimrcにいれとく。)

5/9 tips11 繰り返しか回数指定
Delete more than one word.
2dwとd2wとdw.の３通りが考えられるが消す単語数をミスした時のことを考えるとアンドゥの粒度が細かいドットが良い。d7wかd.......の場合、キーストロークでは前者が勝るが、数え間違いを防ぐために単語を数える暇があれはドットを7回押していった方がよい。
I have a couple of questions.
I have some more questions.
この変更では挿入も必要でドットコマンドを使うことにそれほど意味はない。c3wしてsome moreとする方が挿入モードに入る手間も省けて良い。

5/10	tips12	オペレータとモーションの組み合わせ
dコマンドはdl,daw,dapなど組み合わせられ、これはyコマンドやcコマンドにも可能。これらのコマンドをひっくるめてオペレータという。(:h operatorで確認できる。) 
</>/=  インデント
gu/gU/g~ 小文字化/大文字化/入れ替え
!{motion} 外部プログラムでフィルタリング
オペレータとモーションは組み合わせる。(e.g. gUapでパラグラフ全体を大文字化。
)
以上のようにvimにはノーマル・挿入・ビジュアル・オペレーター待機モードがある。


5/11	tips13	挿入モードで削除
挿入モードでのうち間違えはバックスペースでの修正が早いかもしれないが、一単語消してから打ち直す方がいい練習になる。
挿入モードで使えるコマンド
<C-h>	1文字
<C-w> 1単語
<C-u> 行頭までを削除
これらのコマンドはノーマルモードに固有なものではない。それどころかvimに固有なものでもなく、vimのコマンドラインでもbashシェルのコマンドラインでも使える。

5/12	tips14	挿入ノーマルモード<C-o>
挿入ノーマルモードに込められる弾丸は一発のみ。
zz　画面を再描画し、その時にカーソルを画面の中央に持ってきてくれる。
<C-o>zzはめっちゃ便利でよく使う。

5/13	tips15	挿入モードで貼り付け<C-r>0
Practical Vim, by Drew Neil
Read Drew Neil's
Pの位置からyt, jA <C-r>0 .
このコマンドの一般的な形式は<C-r>{register}となる。{register}は挿入したいレジスタのアドレス。<C-r><C-p>{register}でインデントなどテキスト通りになるが、複数行ある場合はノーマルモードに戻る方がよい。

5/14 tips16	Expressionレジスタで計算<C-r>=
6 cahirs, each costing $35, totals $
A <C-r>= 6*35 <CR>
